class Solution {
public:
    bool doesValidArrayExist(vector<int>& derived) {
        
        if(derived.size()==1 && derived[0]==0) return true;

        if(derived.size()==1 && derived[0]==1) return false;
        vector<int> ans;
        // bool flag=true;
        for(int i =0;i<derived.size();i++){

            if(i==derived.size()-1){
                if(derived[i]==1 && ((ans[i]==1 && ans[0]==1) || (ans[i]==0 && ans[0]==0) )) {cout<<"1";return false;}

                if(derived[i]==0 && ((ans[i]==0 && ans[0]==1) || (ans[i]==1 && ans[0]==0))){ for(auto k:ans) cout<<k<<" "; return false;}
            }

            if(derived[i]==1 && ans.size()==0){
                ans.push_back(0);
                ans.push_back(1);
            }

            else if(derived[i]==0 && ans.size()==0){
                ans.push_back(0);
                ans.push_back(0);
            }

            else if(derived[i]==0 && ans[i]==1){
                ans.push_back(1);
            }

            else if(derived[i]==0 && ans[i]==0){
                ans.push_back(0);
            }

            else if(derived[i]==1 && ans[i]==0){
                ans.push_back(1);
            }

            else if(derived[i]==1 && ans[i]==1){
                ans.push_back(0);
            }
        }

        return true;
    }
};
